{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'https://localhost:7139/';\n  }\n  //métodos para receitas \n  getRecipes() {\n    return this.http.get(`${this.baseUrl}api/recipes`);\n  }\n  searchRecipes(term) {\n    return this.http.get(`${this.baseUrl}api/recipes/search?term=${term}`);\n  }\n  updateRecipe(recipeId, recipe) {\n    return this.http.put(`${this.baseUrl}api/recipes/${recipeId}`, recipe);\n  }\n  //métodos para users\n  getUsers() {\n    return this.http.get(`${this.baseUrl}api/users`);\n  }\n  getUserById(userId) {\n    return this.http.get(`${this.baseUrl}api/users/${userId}`);\n  }\n  updateUser(userId, user) {\n    return this.http.put(`${this.baseUrl}api/users/${userId}`, user);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAOA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFhB,YAAO,GAAG,yBAAyB;EAEH;EAExC;EAEAC,UAAU;IACR,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,aAAa,CAAC;EACzD;EAEAC,aAAa,CAACC,IAAY;IACxB,OAAO,IAAI,CAACL,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,2BAA2BE,IAAI,EAAE,CAAC;EAC7E;EAEAC,YAAY,CAACC,QAAgB,EAAEC,MAAW;IACxC,OAAO,IAAI,CAACR,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACN,OAAO,eAAeI,QAAQ,EAAE,EAAEC,MAAM,CAAC;EAC7E;EAGE;EAEFE,QAAQ;IACN,OAAO,IAAI,CAACV,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,WAAW,CAAC;EACvD;EAEAQ,WAAW,CAACC,MAAc;IACxB,OAAO,IAAI,CAACZ,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,OAAO,aAAaS,MAAM,EAAE,CAAC;EACjE;EAEAC,UAAU,CAACD,MAAc,EAAEE,IAAS;IAClC,OAAO,IAAI,CAACd,IAAI,CAACS,GAAG,CAAM,GAAG,IAAI,CAACN,OAAO,aAAaS,MAAM,EAAE,EAAEE,IAAI,CAAC;EACvE;;AAhCWhB,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAiB,SAAVjB,UAAU;EAAAkB,YAFT;AAAM","names":["ApiService","constructor","http","getRecipes","get","baseUrl","searchRecipes","term","updateRecipe","recipeId","recipe","put","getUsers","getUserById","userId","updateUser","user","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\ricar\\source\\repos\\kabudjy\\Doyou2\\ClientApp\\src\\app\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n  private baseUrl = 'https://localhost:7139/'; \r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //métodos para receitas \r\n\r\n  getRecipes(): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}api/recipes`);\r\n  }\r\n\r\n  searchRecipes(term: string): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}api/recipes/search?term=${term}`);\r\n  }\r\n\r\n  updateRecipe(recipeId: string, recipe: any): Observable<any> {\r\n    return this.http.put<any>(`${this.baseUrl}api/recipes/${recipeId}`, recipe);\r\n  }\r\n\r\n\r\n    //métodos para users\r\n  \r\n  getUsers(): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}api/users`);\r\n  }\r\n\r\n  getUserById(userId: number): Observable<any> {\r\n    return this.http.get<any>(`${this.baseUrl}api/users/${userId}`);\r\n  }\r\n\r\n  updateUser(userId: number, user: any): Observable<any> {\r\n    return this.http.put<any>(`${this.baseUrl}api/users/${userId}`, user);\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}